---
- name: Converge
  hosts: all
  pre_tasks:
    - name: Update apt cache.
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 600
      when: ansible_os_family == 'Debian'

    - name: Wait for systemd to complete initialization.  # noqa 303
      ansible.builtin.command: systemctl is-system-running
      register: systemctl_status
      until: >
        'running' in systemctl_status.stdout or
        'degraded' in systemctl_status.stdout
      retries: 30
      delay: 5
      when: ansible_service_mgr == 'systemd'
      changed_when: false
      failed_when: systemctl_status.rc > 1
  vars:

  tasks:
    - name: Install required packages
      ansible.builtin.package:
        name:
          - ufw
        state: present
    
    - name: Enable ufw
      community.general.ufw:
        state: enabled
    
    - name: Create a non-smart deny rule (to ignore)
      community.general.ufw:
        rule: deny
        proto: tcp
        src: 2001:db8::/32
        port: '25'    

    - name: Create a non-smart allow rule (to ignore)
      community.general.ufw:
        rule: allow
        interface: eth0
        direction: in
        proto: udp
        src: 1.2.3.5
        from_port: '5469'
        dest: 1.2.3.4
        to_port: '5469'

    - name: Create a range allow rule (to ignore)
      community.general.ufw:
        rule: allow
        port: 60000:61000
        proto: tcp

    - name: Create a range allow rule with route true (to ignore)
      community.general.ufw:
        rule: allow
        port: 60000:61000
        proto: tcp
        route: true

    - name: Create a range allow rule with route false (to ignore)
      community.general.ufw:
        rule: allow
        port: 60000:61000
        proto: tcp
        route: 
        
    - name: Create a allow rule with protocol any (to ignore)
      community.general.ufw:
        rule: allow
        port: 601
        proto: any        

    - name: Create a allow rule with protocol udp IN (to ignore)
      community.general.ufw:
        direction: in
        rule: allow
        port: 600
        proto: udp 

    - name: Create a allow rule with protocol udp OUT (to ignore)
      community.general.ufw:
        direction: out
        rule: allow
        port: 600
        proto: udp 

    - name: Create a allow rule with protocol udp OUT (to match and to keep)
      community.general.ufw:
        comment: "an optional comment"
        proto: "any"
        to_ip: "14.5.6.5"
        to_port: "2020"
        rule: "allow"
        from_ip: "172.16.0.0/12"

    - name: Create a allow rule with protocol udp OUT (to match and to delete)
      community.general.ufw:
        comment: "an optional comment"
        proto: "any"
        to_ip: "14.5.6.5"
        to_port: "2020"
        rule: "allow"
        from_ip: "15.16.1.2"

    - name: Include ufw smart rules role
      ansible.builtin.include_role:
        name: youtous.ufw_smart_rules
      vars:
        ufw_rule_parameters:
          comment: "an optional comment"
          proto: "any"
          to_ip: "14.5.6.5"
          to_port: "2020"
          rule: "allow"
        ufw_rule_from_ips:
          - "172.16.0.0/12" # an allowed source to access

...
